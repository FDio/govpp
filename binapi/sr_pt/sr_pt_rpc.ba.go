// Code generated by GoVPP's binapi-generator. DO NOT EDIT.

package sr_pt

import (
	"context"
	"fmt"
	"io"

	api "go.fd.io/govpp/api"
	memclnt "go.fd.io/govpp/binapi/memclnt"
)

// RPCService defines RPC service sr_pt.
type RPCService interface {
	SrPtIfaceAdd(ctx context.Context, in *SrPtIfaceAdd) (*SrPtIfaceAddReply, error)
	SrPtIfaceDel(ctx context.Context, in *SrPtIfaceDel) (*SrPtIfaceDelReply, error)
	SrPtIfaceDump(ctx context.Context, in *SrPtIfaceDump) (RPCService_SrPtIfaceDumpClient, error)
}

type serviceClient struct {
	conn api.Connection
}

func NewServiceClient(conn api.Connection) RPCService {
	return &serviceClient{conn}
}

func (c *serviceClient) SrPtIfaceAdd(ctx context.Context, in *SrPtIfaceAdd) (*SrPtIfaceAddReply, error) {
	out := new(SrPtIfaceAddReply)
	err := c.conn.Invoke(ctx, in, out)
	if err != nil {
		return nil, err
	}
	return out, api.RetvalToVPPApiError(out.Retval)
}

func (c *serviceClient) SrPtIfaceDel(ctx context.Context, in *SrPtIfaceDel) (*SrPtIfaceDelReply, error) {
	out := new(SrPtIfaceDelReply)
	err := c.conn.Invoke(ctx, in, out)
	if err != nil {
		return nil, err
	}
	return out, api.RetvalToVPPApiError(out.Retval)
}

func (c *serviceClient) SrPtIfaceDump(ctx context.Context, in *SrPtIfaceDump) (RPCService_SrPtIfaceDumpClient, error) {
	stream, err := c.conn.NewStream(ctx)
	if err != nil {
		return nil, err
	}
	x := &serviceClient_SrPtIfaceDumpClient{stream}
	if err := x.Stream.SendMsg(in); err != nil {
		return nil, err
	}
	if err = x.Stream.SendMsg(&memclnt.ControlPing{}); err != nil {
		return nil, err
	}
	return x, nil
}

type RPCService_SrPtIfaceDumpClient interface {
	Recv() (*SrPtIfaceDetails, error)
	api.Stream
}

type serviceClient_SrPtIfaceDumpClient struct {
	api.Stream
}

func (c *serviceClient_SrPtIfaceDumpClient) Recv() (*SrPtIfaceDetails, error) {
	msg, err := c.Stream.RecvMsg()
	if err != nil {
		return nil, err
	}
	switch m := msg.(type) {
	case *SrPtIfaceDetails:
		return m, nil
	case *memclnt.ControlPingReply:
		err = c.Stream.Close()
		if err != nil {
			return nil, err
		}
		return nil, io.EOF
	default:
		return nil, fmt.Errorf("unexpected message: %T %v", m, m)
	}
}
