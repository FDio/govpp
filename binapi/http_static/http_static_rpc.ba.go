// Code generated by GoVPP's binapi-generator. DO NOT EDIT.

package http_static

import (
	"context"

	api "go.fd.io/govpp/api"
)

// RPCService defines RPC service http_static.
type RPCService interface {
	HTTPStaticEnableV2(ctx context.Context, in *HTTPStaticEnableV2) (*HTTPStaticEnableV2Reply, error)
	HTTPStaticEnableV3(ctx context.Context, in *HTTPStaticEnableV3) (*HTTPStaticEnableV3Reply, error)
}

type serviceClient struct {
	conn api.Connection
}

func NewServiceClient(conn api.Connection) RPCService {
	return &serviceClient{conn}
}

func (c *serviceClient) HTTPStaticEnableV2(ctx context.Context, in *HTTPStaticEnableV2) (*HTTPStaticEnableV2Reply, error) {
	out := new(HTTPStaticEnableV2Reply)
	err := c.conn.Invoke(ctx, in, out)
	if err != nil {
		return nil, err
	}
	return out, api.RetvalToVPPApiError(out.Retval)
}

func (c *serviceClient) HTTPStaticEnableV3(ctx context.Context, in *HTTPStaticEnableV3) (*HTTPStaticEnableV3Reply, error) {
	out := new(HTTPStaticEnableV3Reply)
	err := c.conn.Invoke(ctx, in, out)
	if err != nil {
		return nil, err
	}
	return out, api.RetvalToVPPApiError(out.Retval)
}
