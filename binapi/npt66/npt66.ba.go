// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// versions:
//  binapi-generator: v0.12.0
//  VPP:              24.02.0-1~gc2036a95e
// source: plugins/npt66.api.json

// Package npt66 contains generated bindings for API file npt66.api.
//
// Contents:
// -  2 messages
package npt66

import (
	api "go.fd.io/govpp/api"
	interface_types "go.fd.io/govpp/binapi/interface_types"
	ip_types "go.fd.io/govpp/binapi/ip_types"
	codec "go.fd.io/govpp/codec"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion2

const (
	APIFile    = "npt66"
	APIVersion = "0.0.1"
	VersionCrc = 0x4e353b99
)

// // Copyright(c) 2023 Cisco Systems, Inc.
// Npt66BindingAddDel defines message 'npt66_binding_add_del'.
type Npt66BindingAddDel struct {
	IsAdd     bool                           `binapi:"bool,name=is_add" json:"is_add,omitempty"`
	SwIfIndex interface_types.InterfaceIndex `binapi:"interface_index,name=sw_if_index" json:"sw_if_index,omitempty"`
	Internal  ip_types.IP6Prefix             `binapi:"ip6_prefix,name=internal" json:"internal,omitempty"`
	External  ip_types.IP6Prefix             `binapi:"ip6_prefix,name=external" json:"external,omitempty"`
}

func (m *Npt66BindingAddDel) Reset()               { *m = Npt66BindingAddDel{} }
func (*Npt66BindingAddDel) GetMessageName() string { return "npt66_binding_add_del" }
func (*Npt66BindingAddDel) GetCrcString() string   { return "8aa10a52" }
func (*Npt66BindingAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *Npt66BindingAddDel) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 1      // m.IsAdd
	size += 4      // m.SwIfIndex
	size += 1 * 16 // m.Internal.Address
	size += 1      // m.Internal.Len
	size += 1 * 16 // m.External.Address
	size += 1      // m.External.Len
	return size
}
func (m *Npt66BindingAddDel) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeBool(m.IsAdd)
	buf.EncodeUint32(uint32(m.SwIfIndex))
	buf.EncodeBytes(m.Internal.Address[:], 16)
	buf.EncodeUint8(m.Internal.Len)
	buf.EncodeBytes(m.External.Address[:], 16)
	buf.EncodeUint8(m.External.Len)
	return buf.Bytes(), nil
}
func (m *Npt66BindingAddDel) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.IsAdd = buf.DecodeBool()
	m.SwIfIndex = interface_types.InterfaceIndex(buf.DecodeUint32())
	copy(m.Internal.Address[:], buf.DecodeBytes(16))
	m.Internal.Len = buf.DecodeUint8()
	copy(m.External.Address[:], buf.DecodeBytes(16))
	m.External.Len = buf.DecodeUint8()
	return nil
}

// Npt66BindingAddDelReply defines message 'npt66_binding_add_del_reply'.
type Npt66BindingAddDelReply struct {
	Retval int32 `binapi:"i32,name=retval" json:"retval,omitempty"`
}

func (m *Npt66BindingAddDelReply) Reset()               { *m = Npt66BindingAddDelReply{} }
func (*Npt66BindingAddDelReply) GetMessageName() string { return "npt66_binding_add_del_reply" }
func (*Npt66BindingAddDelReply) GetCrcString() string   { return "e8d4e804" }
func (*Npt66BindingAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *Npt66BindingAddDelReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	return size
}
func (m *Npt66BindingAddDelReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	return buf.Bytes(), nil
}
func (m *Npt66BindingAddDelReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	return nil
}

func init() { file_npt66_binapi_init() }
func file_npt66_binapi_init() {
	api.RegisterMessage((*Npt66BindingAddDel)(nil), "npt66_binding_add_del_8aa10a52")
	api.RegisterMessage((*Npt66BindingAddDelReply)(nil), "npt66_binding_add_del_reply_e8d4e804")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*Npt66BindingAddDel)(nil),
		(*Npt66BindingAddDelReply)(nil),
	}
}
