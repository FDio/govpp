// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// versions:
//  binapi-generator: v0.12.0
//  VPP:              25.02-release
// source: plugins/auto_sdl.api.json

// Package auto_sdl contains generated bindings for API file auto_sdl.api.
//
// Contents:
// -  2 messages
package auto_sdl

import (
	api "go.fd.io/govpp/api"
	codec "go.fd.io/govpp/codec"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion2

const (
	APIFile    = "auto_sdl"
	APIVersion = "1.0.0"
	VersionCrc = 0x434063e5
)

// auto sdl config
//   - threshold - number of times to hit for an auto SDL entry is created
//   - remove_timeout - timeout value for the auto SDL entries after they are created
//   - enable - enable/disable
//
// AutoSdlConfig defines message 'auto_sdl_config'.
type AutoSdlConfig struct {
	Threshold     uint32 `binapi:"u32,name=threshold,default=5" json:"threshold,omitempty"`
	RemoveTimeout uint32 `binapi:"u32,name=remove_timeout,default=300" json:"remove_timeout,omitempty"`
	Enable        bool   `binapi:"bool,name=enable" json:"enable,omitempty"`
}

func (m *AutoSdlConfig) Reset()               { *m = AutoSdlConfig{} }
func (*AutoSdlConfig) GetMessageName() string { return "auto_sdl_config" }
func (*AutoSdlConfig) GetCrcString() string   { return "14f30db8" }
func (*AutoSdlConfig) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *AutoSdlConfig) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Threshold
	size += 4 // m.RemoveTimeout
	size += 1 // m.Enable
	return size
}
func (m *AutoSdlConfig) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(m.Threshold)
	buf.EncodeUint32(m.RemoveTimeout)
	buf.EncodeBool(m.Enable)
	return buf.Bytes(), nil
}
func (m *AutoSdlConfig) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Threshold = buf.DecodeUint32()
	m.RemoveTimeout = buf.DecodeUint32()
	m.Enable = buf.DecodeBool()
	return nil
}

// AutoSdlConfigReply defines message 'auto_sdl_config_reply'.
type AutoSdlConfigReply struct {
	Retval int32 `binapi:"i32,name=retval" json:"retval,omitempty"`
}

func (m *AutoSdlConfigReply) Reset()               { *m = AutoSdlConfigReply{} }
func (*AutoSdlConfigReply) GetMessageName() string { return "auto_sdl_config_reply" }
func (*AutoSdlConfigReply) GetCrcString() string   { return "e8d4e804" }
func (*AutoSdlConfigReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *AutoSdlConfigReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	return size
}
func (m *AutoSdlConfigReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	return buf.Bytes(), nil
}
func (m *AutoSdlConfigReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	return nil
}

func init() { file_auto_sdl_binapi_init() }
func file_auto_sdl_binapi_init() {
	api.RegisterMessage((*AutoSdlConfig)(nil), "auto_sdl_config_14f30db8")
	api.RegisterMessage((*AutoSdlConfigReply)(nil), "auto_sdl_config_reply_e8d4e804")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*AutoSdlConfig)(nil),
		(*AutoSdlConfigReply)(nil),
	}
}
