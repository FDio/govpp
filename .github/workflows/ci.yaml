---
name: CI
on:
  push:
    tags:
      - v*
    branches:
      - master
      - ci
  pull_request:
  # Allows running this workflow manually
  workflow_dispatch:

permissions:
  contents: read

jobs:
  yaml-lint:
    name: "Lint YAML"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Run YAML linter"
        uses: ibiqlik/action-yamllint@v3
        with:
          config_file: '.github/ci/yamllint.yml'

  markdownlint:
    name: "Lint Markdown"
    runs-on: ubuntu-latest
    steps:
      - uses: DavidAnson/markdownlint-cli2-action@v19
        with:
          fix: true
          globs: '**/*.md'

  go-mod:
    name: "Check go.mod"
    strategy:
      matrix:
        go: [ '1.24' ]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Go"
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: "Run go mod tidy"
        run: go mod tidy -v

      - name: "Check go.mod"
        run: |
          git diff --exit-code go.mod

      - name: "Check go.sum"
        run: |
          git diff --exit-code go.sum

  binapi:
    name: "Check generated binapi"
    strategy:
      matrix:
        go: [ '1.23' ]
    env:
      VERSION: v0.11.0
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Go"
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: "Generate binapi"
        run: make gen-binapi-docker

      - name: "Check binapi"
        run: |
          git diff --exit-code binapi

  build-test:
    name: "Build and test"
    strategy:
      matrix:
        go: [ '1.24' ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Go"
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: "Setup gotestsum"
        uses: autero1/action-gotestsum@v2.0.0
        with:
          gotestsum_version: 1.11.0

      - name: "Go Build"
        run: go build -v ./...

      - name: "Go Test"
        run: gotestsum --format testname --jsonfile test.json -- -race ./...

      - name: "Test results"
        if: always()
        uses: guyarb/golang-test-annotations@v0.8.0
        with:
          test-results: test.json

  golangci:
    name: "GolangCI"
    strategy:
      matrix:
        go: [ '1.24' ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Go"
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: "Run golangci"
        uses: golangci/golangci-lint-action@v6  # docs: https://github.com/golangci/golangci-lint-action
        with:
          version: latest
